# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-present, NEM
# This file is distributed under the same license as the symbol-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: symbol-docs 0.21.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-18 17:38+0100\n"
"PO-Revision-Date: 2020-06-19 17:53+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020\n"
"Language-Team: Japanese "
"(https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/serialization/lock_secret.rst:36
msgid "Lock Secret Schemas"
msgstr "ロックシークレットスキーマ"

#: ../../source/serialization/lock_secret.rst:38
msgid ""
"The `catbuffer schemas <https://github.com/nemtech/catbuffer>`_ "
"repository defines how each transaction type should be serialized. In "
"combination with the `catbuffer-generators <https://github.com/nemtech"
"/catbuffer-generators>`_ project, developers can generate builder classes"
" for a given set of programming languages."
msgstr ""
"`catbuffer スキーマ <https://github.com/nemtech/catbuffer>`_ "
"リポジトリはどのように各トランザクションタイプがシリアライズされるべきかを定義しています。 `catbuffer-generators "
"<https://github.com/nemtech/catbuffer-generators>`_ "
"プロジェクトと組み合わせると、開発者は特定のプログラミング言語用のビルダークラスを生成できます。"

#: ../../source/serialization/lock_secret.rst:42
msgid "Lock Secret Types"
msgstr "ロックシークレットタイプ"

#: ../../source/serialization/lock_secret.rst:47
msgid "LockHashAlgorithm"
msgstr ""

#: ../../source/serialization/lock_secret.rst:49
msgid "The list of supported hashing algorithms."
msgstr "サポートされているハッシュアルゴリズムのリスト"

#: ../../source/serialization/lock_secret.rst:51
msgid "Enumeration: uint8"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Id"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Description"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "0 (Op_Sha3_256)"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Proof is hashed using SHA3-256."
msgstr "SHA3-256 によってハッシュ化された proof"

#: ../../source/serialization/lock_secret.rst:1
msgid "1 (Op_Hash_160)"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ""
"Proof is hashed twice: first with SHA-256 and then with RIPEMD-160 "
"(bitcoin's OP_HASH160)."
msgstr "最初に SHA-256 を、その後 RIPEMD-160 によって2回のハッシュ化された proof (bitcoin's OP_HASH160)"

#: ../../source/serialization/lock_secret.rst:1
msgid "2 (Op_Hash_256)"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Proof is hashed twice with SHA-256 (bitcoin's OP_HASH256)."
msgstr "SHA-256 によって2回のハッシュ化されたproof (bitcoin's OP_HASH256)"

#: ../../source/serialization/lock_secret.rst:63
#, fuzzy
msgid "Secret Lock"
msgstr "シークレットプルーフ"

#: ../../source/serialization/lock_secret.rst:68
msgid "SecretLockTransaction"
msgstr ""

#: ../../source/serialization/lock_secret.rst:70
#, fuzzy
msgid ""
"Use a SecretLockTransaction to transfer mosaics between two accounts. The"
" mosaics sent remain locked until a valid :ref:`SecretProofTransaction "
"<secret-proof-transaction>` unlocks them."
msgstr ""
"2 つのアカウント間でモザイクを転送するにはSecretLockTransactionを使用します。特定のモザイクは妥当な "
":ref:`SecretProofTransaction <secret-proof-transaction>` "
"がそれらをアンロックするまで、ロックされたままになります。"

#: ../../source/serialization/lock_secret.rst:73
msgid ""
"The maximum number of blocks the lock can lie up to is ``30 days``, being"
" this parameter :ref:`configurable per network <config-network-"
"properties>`. If the transaction duration is reached without being "
"proved, the locked amount goes back to the initiator of the "
"SecretLockTransaction."
msgstr ""
"ロックできるブロックの最大数は ``30日間`` です。このパラメータは :ref:`ネットワークごとに設定可能 <config-network-"
"properties>` "
"です。トランザクションが証明されずに期間に到達した場合、ロックされた総量はSecretLockTransactionを開始したアカウントへ戻ります。"

#: ../../source/serialization/lock_secret.rst:76
#: ../../source/serialization/lock_secret.rst:107
msgid "**Version**: 0x01"
msgstr ""

#: ../../source/serialization/lock_secret.rst:78
msgid "**EntityType**: 0x4152"
msgstr ""

#: ../../source/serialization/lock_secret.rst:80
#: ../../source/serialization/lock_secret.rst:111
msgid "**Inlines**:"
msgstr ""

#: ../../source/serialization/lock_secret.rst:82
#: ../../source/serialization/lock_secret.rst:113
msgid ""
":ref:`Transaction <transaction>` or :ref:`EmbeddedTransaction <embedded-"
"transaction>`"
msgstr ""
":ref:`Transaction <transaction>` または :ref:`EmbeddedTransaction <embedded-"
"transaction>`"

#: ../../source/serialization/lock_secret.rst:1
msgid "Property"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Type"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "recipientAddress"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ":schema:`UnresolvedAddress <types.cats>`"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Address that receives the funds once unlocked."
msgstr "ロック解除後、ファンドを受け取るアドレス"

#: ../../source/serialization/lock_secret.rst:1
msgid "secret"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ":schema:`Hash256 <types.cats>`"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Proof hashed."
msgstr "ハッシュ化された証明"

#: ../../source/serialization/lock_secret.rst:1
#, fuzzy
msgid "mosaic"
msgstr "ロックされたモザイク"

#: ../../source/serialization/lock_secret.rst:1
msgid ":ref:`UnresolvedMosaic <unresolved-mosaic>`"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Locked mosaic."
msgstr "ロックされたモザイク"

#: ../../source/serialization/lock_secret.rst:1
msgid "duration"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ":schema:`BlockDuration <types.cats>`"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ""
"Number of blocks for which a lock should be valid. If reached, the "
"mosaics will be returned to the initiator."
msgstr "ロックを有効にするブロックの数。期間は ``30`` 日までが許可されています。"

#: ../../source/serialization/lock_secret.rst:1
msgid "hashAlgorithm"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid ":ref:`LockHashAlgorithm<lock-hash-algorithm>`"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Algorithm used to hash the proof."
msgstr "proof に使用されているハッシュアルゴリズム"

#: ../../source/serialization/lock_secret.rst:96
msgid "Secret Proof"
msgstr "シークレットプルーフ"

#: ../../source/serialization/lock_secret.rst:101
msgid "SecretProofTransaction"
msgstr ""

#: ../../source/serialization/lock_secret.rst:103
msgid ""
"Use a SecretProofTransaction to unlock :ref:`SecretLockTransactions "
"<secret-lock-transaction>`."
msgstr ""
"SecretProofTransactionは :ref:`SecretLockTransactions <secret-lock-"
"transaction>` のアンロックに使用します。"

#: ../../source/serialization/lock_secret.rst:105
#, fuzzy
msgid "The transaction must prove knowing the *proof* that unlocks the mosaics."
msgstr "トランザクションはモザイクをアンロックするための *proof* を証明しなければなりません。"

#: ../../source/serialization/lock_secret.rst:109
msgid "**EntityType**: 0x4252"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "proofSize"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "uint16"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Proof size in bytes."
msgstr "バイト換算のプルーフサイズ"

#: ../../source/serialization/lock_secret.rst:1
msgid "proof"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "array(byte, proofSize)"
msgstr ""

#: ../../source/serialization/lock_secret.rst:1
msgid "Original random set of bytes."
msgstr "元のランダムなバイト列"

