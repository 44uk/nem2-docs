# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-26 21:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Yoshiyuki Ieyama, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/44uk-works/teams/92962/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/sdk/development.rst:5
msgid "SDK Development"
msgstr "SDK 開発"

#: ../../source/sdk/development.rst:7
msgid ""
"A key objective is that interoperability becomes a natural design of the "
"NEM2-SDK. Follow this guideline to collaborate creating a NEM SDK, achieving"
" the best quality with the less effort."
msgstr ""

#: ../../source/sdk/development.rst:12
msgid "Learning about Catapult"
msgstr "Catapult について学習する"

#: ../../source/sdk/development.rst:14
msgid ""
"In case you haven't used NEM2-SDK or Catapult in general, we encourage you "
"to:"
msgstr "あなたが NEM2-SDK または Catapult を使ったことがない場合、私達はあなたを応援します:"

#: ../../source/sdk/development.rst:16
msgid ""
"Review the technical documentation to become familiar with the concepts at "
"https://nemtech.github.io/."
msgstr "コンセプトに詳しくなるためにはテクニカルドキュメントを見てください https://nemtech.github.io/"

#: ../../source/sdk/development.rst:18
msgid ""
"Setup the `catapult in local environment via docker <https://github.com"
"/tech-bureau/catapult-service-bootstrap>`_ or enroll the `beta program "
"<https://mijin.io/en/product/#mijin2>`_ to access a Catapult Test Net "
"without the need to run it yourself."
msgstr ""

#: ../../source/sdk/development.rst:19
msgid ""
"`Check the API reference <https://nemtech.github.io/api.html>`_ and play "
"with the API endpoints."
msgstr ""

#: ../../source/sdk/development.rst:20
msgid ""
"Become familiar with the current `nem2-sdk via code examples "
"<https://nemtech.github.io/guides/overview.html>`_ & `nem2-cli "
"<https://nemtech.github.io/cli/overview.html>`_."
msgstr ""

#: ../../source/sdk/development.rst:21
msgid ""
"`Join "
"<https://join.slack.com/t/nem2/shared_invite/enQtMzY4MDc2NTg0ODgyLTFhZjgxM2NhYTQ1MTY1Mjk0ZDE2ZTJlYzUxYWYxYmJlYjAyY2EwNGM5NzgxMjM4MGEzMDc5ZDIwYTgzZjgyODM>`_"
" our Slack to ask Catapult related questions."
msgstr ""

#: ../../source/sdk/development.rst:25
msgid "Development"
msgstr "開発"

#: ../../source/sdk/development.rst:27
msgid ""
"You can base your work in `TypeScript <https://github.com/nemtech/nem2-sdk-"
"typescript-javascript>`_ and `Java <https://github.com/nemtech/nem2-sdk-"
"java>`_ SDKs. The TypeScript version is the first SDK getting the latest "
"updates. Meanwhile, Java takes longer to be updated."
msgstr ""

#: ../../source/sdk/development.rst:30
msgid ""
"Unfortunately, TypeScript version has one specific implementation detail: "
"the low level implementation is separated from the SDK, called `nem2"
"-library-js <https://github.com/nemtech/nem2-library-js>`_. There was a need"
" to create this low-level library to perform specific chain testing."
msgstr ""

#: ../../source/sdk/development.rst:33
msgid "**The SDKs you create does not require this separate implementation**."
msgstr ""

#: ../../source/sdk/development.rst:35
msgid ""
"Regularly check the `Changelog <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/CHANGELOG.md>`_ to be sure you didn't miss any code change "
"update."
msgstr ""

#: ../../source/sdk/development.rst:38
msgid "Before starting"
msgstr "始める前に"

#: ../../source/sdk/development.rst:40
msgid ""
"Be sure no one is already working on the SDK you want to create. Check the "
":doc:`repository list <languages>`, if someone is already working on it, we "
"suggest you collaborate with him/her."
msgstr ""

#: ../../source/sdk/development.rst:43
msgid ""
"Claim the SDK `forking this repository "
"<https://help.github.com/articles/creating-a-pull-request/>`_ and adding a "
"new entry to the :doc:`repository list <languages>`."
msgstr ""

#: ../../source/sdk/development.rst:46
msgid ""
"Consider using one of the suggested `licenses <#recommended-licenses>`_."
msgstr ""

#: ../../source/sdk/development.rst:50
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: ../../source/sdk/development.rst:52
msgid ""
"Add a README with the instructions to install the SDK. Find :download:`here "
"a template <../resources/templates/README_SDK.md>`."
msgstr ""

#: ../../source/sdk/development.rst:54
msgid ""
"Add a `Code of Conduct <https://help.github.com/articles/adding-a-code-of-"
"conduct-to-your-project/>`_. Find :download:`here an example "
"<../resources/templates/CODE_OF_CONDUCT.md>`."
msgstr ""

#: ../../source/sdk/development.rst:57
msgid ""
"Add a `Contributors guidelines <https://help.github.com/articles/setting-"
"guidelines-for-repository-contributors/>`_ to help others know how they can "
"help you. Find :download:`here a CONTRIBUTING.md "
"template<../resources/templates/CONTRIBUTING.md>`."
msgstr ""

#: ../../source/sdk/development.rst:61
msgid ""
"Setup the Continuous Integration system. We use `travis-ci <https://travis-"
"ci.org/>`_, but feel free to use the one suits you best."
msgstr ""

#: ../../source/sdk/development.rst:65
msgid ""
"A project with a good test coverage it's more likely to be used and trusted "
"by the developers!"
msgstr ""

#: ../../source/sdk/development.rst:68
msgid ""
"We **strongly** suggest you to do `Test-Driven Development "
"<https://en.wikipedia.org/wiki/Test-driven_development>`_ or Unit-Testing "
"(test last). If you need inspiration, you can adapt the same `tests we did "
"<https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/tree/master/test>`_."
msgstr ""

#: ../../source/sdk/development.rst:75
msgid "API Wrapper"
msgstr "API ラッパー"

#: ../../source/sdk/development.rst:77
msgid ""
"The API generation can be done with `Swagger Codegen "
"<https://swagger.io/tools/swagger-codegen/>`_. It supports multiple "
"languages. Hopefully, yours in the list."
msgstr ""

#: ../../source/sdk/development.rst:81
msgid ""
"The API swagger file definition can be found `here "
"<https://github.com/nemtech/nem2-docs/blob/master/source/resources/collections/swagger.yaml>`_."
msgstr ""

#: ../../source/sdk/development.rst:84
msgid ""
"`Java example <https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/sdk/infrastructure>`_. The code "
"generated by swagger are the ``DTOs``."
msgstr ""

#: ../../source/sdk/development.rst:88
msgid ""
"We drop the client classes and instead we implement them using the "
"`Repository pattern <https://martinfowler.com/eaaCatalog/repository.html>`_ "
"returning `Observables <https://en.wikipedia.org/wiki/Observer_pattern>`_ of"
" `ReactiveX <http://reactivex.io/>`_."
msgstr ""

#: ../../source/sdk/development.rst:95
msgid "List of interfaces:"
msgstr "インターフェイスリスト:"

#: ../../source/sdk/development.rst:97
msgid ""
"`AccountRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/AccountRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:98
msgid ""
"`BlockchainRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/BlockchainRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:99
msgid ""
"`MosaicRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/MosaicRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:100
msgid ""
"`NamespaceRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/NamespaceRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:101
msgid ""
"`NetworkRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/NetworkRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:102
msgid ""
"`TransferRepository <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/TransactionRepository.java>`_"
msgstr ""

#: ../../source/sdk/development.rst:104
msgid ""
"Check the `Http implementations <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/infrastructure/AccountHttp.java>`_"
" in case you doubt about some API endpoint."
msgstr ""

#: ../../source/sdk/development.rst:108
msgid ""
"The **repositories return Models instead of DTOs**. You will need to code "
"the `Models <#models>`_ before finish the API wrapper."
msgstr ""

#: ../../source/sdk/development.rst:111
msgid "Models"
msgstr "モデル"

#: ../../source/sdk/development.rst:113
msgid ""
"`Java models example <https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/sdk/model>`_."
msgstr ""

#: ../../source/sdk/development.rst:116
msgid ""
"The models are by default immutable. The models aim to hide the complexity, "
"like type conversion or relationship between objects."
msgstr ""

#: ../../source/sdk/development.rst:119
msgid ""
"You will find in the different implementations different invariants to "
"ensure the object is well constructed and a nicer API is published."
msgstr ""

#: ../../source/sdk/development.rst:122
msgid "Particular decisions to consider:"
msgstr ""

#: ../../source/sdk/development.rst:124
msgid ""
"``uint64`` support: meanwhile `Java supports big numbers "
"<https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html>`_, for"
" example JavaScript doesn't. The JavaScript SDK has a custom class to handle"
" the `uint64 types <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/UInt64.ts>`_. If your language supports "
"``uint64`` use that implementation. Otherwise, adapt the ``UInt64.ts`` "
"implementation to your language."
msgstr ""

#: ../../source/sdk/development.rst:131
msgid ""
"API conversions: The API returns the data sometimes compressed, you might "
"need to convert that types for the user."
msgstr ""

#: ../../source/sdk/development.rst:133
msgid ""
"`Mosaics <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/mosaic/MosaicId.java>`_ & "
"`Namespaces <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/namespace/NamespaceId.java>`_"
" IDs: The namespaces and mosaics aren't strings any more compared to NIS1. "
"As you can see in the class, the ``string`` name is optional. At creation "
"time you add the string name, but when you receive the Namespace/Mosaic from"
" the network, it comes in formatted as\\ ``uint64`` ID. A specific endpoint "
"returns the Namespace/Mosaic ``string`` name. We did a Service to return the"
" Mosaic with the ``string`` name automatically for the user, check the "
"`implementation here <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/service/MosaicService.ts>`_ (only available in "
"TypeScript SDK version)."
msgstr ""

#: ../../source/sdk/development.rst:147
msgid "Transaction Serialization"
msgstr "トランザクションのシリアル化"

#: ../../source/sdk/development.rst:149
msgid ""
"The Transaction Serialization will change when `catbuffer "
"<https://github.com/nemtech/catbuffer>`_ tool is finished. Meanwhile, we "
"will use `flatbuffers <https://google.github.io/flatbuffers/>`_."
msgstr ""

#: ../../source/sdk/development.rst:151
msgid ""
"A Transaction needs a particular serialization schema in binary optimized in"
" size. The transaction serialization has multiple steps to keep easy to "
"create transactions and maintain the schema serialization."
msgstr ""

#: ../../source/sdk/development.rst:155
msgid "**Generating the buffer classes: The easy part**"
msgstr ""

#: ../../source/sdk/development.rst:158
msgid ""
"Install the `flatbuffers tool "
"<https://github.com/google/flatbuffers/releases>`_, you might need to "
"compile it. Use version 1.7.1 or newer."
msgstr ""

#: ../../source/sdk/development.rst:161
msgid ""
"`Compile the schema for your language "
"<https://google.github.io/flatbuffers/flatbuffers_guide_using_schema_compiler.html>`_."
" `Download the flatbuffers files here "
"<https://github.com/nemtech/guidelines/tree/master/development/sdk-"
"development-assets/flatbuffers>`_."
msgstr ""

#: ../../source/sdk/development.rst:165
msgid ""
"Move the generated files to your ``model/transaction`` SDK folder. `Example "
"<https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/sdk/model/transaction>`_."
msgstr ""

#: ../../source/sdk/development.rst:168
msgid "**Creating the Schema class: The difficult part**"
msgstr ""

#: ../../source/sdk/development.rst:170
msgid ""
"Create the `Schema class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Schema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:172
msgid ""
"Create the `SchemaAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SchemaAttribute.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:174
msgid ""
"Create the `ScalarAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ScalarAttribute.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:176
msgid ""
"Create the `ArrayAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ArrayAttribute.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:178
msgid ""
"Create the `TableAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TableAttribute.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:180
msgid ""
"Create the `TableArrayAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TableArrayAttribute.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:182
msgid ""
"`Constants class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Constants.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:185
msgid "**Creating the Transaction Schemas**"
msgstr "**トランザクションスキーマの作成**"

#: ../../source/sdk/development.rst:187
msgid ""
"Each transaction has a Schema. It has the same type as ``flatbuffer "
"schemas`` but using the ``Schema`` class. It's used to know where each "
"component is located in the ``flatbuffer schema`` and remove the unnecessary"
" bytes to create the optimized serialization."
msgstr ""

#: ../../source/sdk/development.rst:192
msgid ""
"`AggregateTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/AggregateTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:193
msgid ""
"`LockFundsTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/LockFundsTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:194
msgid ""
"`ModifyMultisigAccountTransactionSchema <https://github.com/nemtech/nem2"
"-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ModifyMultisigAccountTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:195
msgid ""
"`MosaicDefinitionTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/MosaicDefinitionTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:196
msgid ""
"`MosaicSupplyChangeTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/MosaicSupplyChangeTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:197
msgid ""
"`RegisterNamespaceTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/RegisterNamespaceTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:198
msgid ""
"`SecretLockTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SecretLockTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:199
msgid ""
"`SecretProofTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SecretProofTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:200
msgid ""
"`TransferTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TransferTransactionSchema.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:202
msgid "**Using the Schemas in the Transaction Models**"
msgstr "**トランザクションモデルの中でスキーマを使用する**"

#: ../../source/sdk/development.rst:204
msgid ""
"The Transaction class has the abstract method `generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Transaction.java#L159>`_."
" Each Transaction has to implement and use the previous classes, the Buffers"
" and the Schemas, to serialize the transaction."
msgstr ""

#: ../../source/sdk/development.rst:209
msgid ""
"`AggregateTransaction.generateBytes() <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/AggregateTransaction.java#L97>`_."
msgstr ""

#: ../../source/sdk/development.rst:210
msgid ""
"`LockFundsTransaction.generateBytes() <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/LockFundsTransaction.java#L97>`_."
msgstr ""

#: ../../source/sdk/development.rst:211
msgid ""
"`ModifyMultisigAccountTransaction.generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ModifyMultisigAccountTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:212
msgid ""
"`MosaicDefinitionTransaction.generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/MosaicDefinitionTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:213
msgid ""
"`MosaicSupplyChangeTransaction.generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/MosaicSupplyChangeTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:214
msgid ""
"`RegisterNamespaceTransaction.generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/RegisterNamespaceTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:215
msgid ""
"`SecretLockTransaction.generateBytes() <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SecretLockTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:216
msgid ""
"`SecretProofTransaction.generateBytes() <https://github.com/nemtech/nem2"
"-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SecretProofTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:217
msgid ""
"`TransferTransaction.generateBytes() <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TransferTransaction.java>`_."
msgstr ""

#: ../../source/sdk/development.rst:219
msgid "**Do not forget about Cosignatory classes**, it has to be done too."
msgstr ""

#: ../../source/sdk/development.rst:222
msgid "KeyPair and Cryptographic functions"
msgstr "キーペアと暗号化関数"

#: ../../source/sdk/development.rst:224
msgid "This section is incomplete."
msgstr ""

#: ../../source/sdk/development.rst:228
msgid "Documenting your SDK"
msgstr "あなたの SDK のドキュメント化"

#: ../../source/sdk/development.rst:230
msgid ""
"SDKs need to be adopted by other developers. As a contributor, no one knows "
"better than you how a determined SDK works. Consider helping others and "
"spread the usage of the SDK by providing :doc:`the following documentation "
"<documentation>`."
msgstr ""

#: ../../source/sdk/development.rst:237
msgid "Publishing the SDK as official"
msgstr ""

#: ../../source/sdk/development.rst:239
msgid ""
"When you open-source your code, :doc:`submit the repository to this page "
"<../sdk/languages>`."
msgstr ""

#: ../../source/sdk/development.rst:242
msgid ""
"To become an accepted SDK, it should be proposed as a `NIP "
"<https://github.com/nemtech/NIP/blob/master/NIPs/nip-0001.md>`_. The reason "
"behind the NEM2 Improvement Proposal is to ensure that the new libraries are"
" reviewed, tested and shared among NEM developers."
msgstr ""

#: ../../source/sdk/development.rst:249
msgid "Future work"
msgstr ""

#: ../../source/sdk/development.rst:251
msgid ""
"The current guideline shows what is done up to today since the SDK isn't "
"complete. It will get updates according to the latest architecture/features."
msgstr ""

#: ../../source/sdk/development.rst:257
msgid "Recommended Licenses"
msgstr ""

#: ../../source/sdk/development.rst:259
msgid "MIT: `Expat/MIT/X11 license <https://opensource.org/licenses/MIT>`_"
msgstr ""

#: ../../source/sdk/development.rst:260
msgid ""
"Apache-2.0: `Apache License, version 2.0 "
"<http://www.apache.org/licenses/LICENSE-2.0>`_"
msgstr ""

#: ../../source/sdk/development.rst:262
msgid ""
"BSD-2-Clause: `OSI-approved BSD 2-clause license "
"<https://opensource.org/licenses/BSD-2-Clause>`_"
msgstr ""

#: ../../source/sdk/development.rst:264
msgid ""
"BSD-3-Clause: `OSI-approved BSD 3-clause license "
"<https://opensource.org/licenses/BSD-3-Clause>`_"
msgstr ""

#: ../../source/sdk/development.rst:266
msgid ""
"CC0-1.0: `Creative Commons CC0 1.0 Universal "
"<https://creativecommons.org/publicdomain/zero/1.0/>`_"
msgstr ""

#: ../../source/sdk/development.rst:268
msgid ""
"GNU-All-Permissive: `GNU All-Permissive License "
"<http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-"
"Files.html>`_"
msgstr ""

#: ../../source/sdk/development.rst:270
msgid ""
"LGPL-2.1+: `GNU Lesser General Public License (LGPL), version 2.1 or newer "
"<http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html>`_"
msgstr ""
