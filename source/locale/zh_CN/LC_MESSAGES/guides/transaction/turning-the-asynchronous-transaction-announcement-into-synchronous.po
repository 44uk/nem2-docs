# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# nem.cn <527357637@qq.com>, 2019
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.17.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-18 18:08+0000\n"
"PO-Revision-Date: 2019-02-22 09:14+0000\n"
"Last-Translator: nem.cn <527357637@qq.com>, 2019\n"
"Language-Team: Chinese (China) "
"(https://www.transifex.com/nemtech/teams/95744/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:10
msgid "Turning the asynchronous transaction announcement into synchronous"
msgstr "将异步事务通知转为同步"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:12
msgid ""
"Turn asynchronous transaction announcement into synchronous with "
"|nem2-camel|."
msgstr "将异步事务公告转换为与 |nem2-camel|同步。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:16
msgid "Background"
msgstr "背景"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:18
#, fuzzy
msgid ""
"Alice is developing an app to send ``10 cat.currency`` to Bob. She wants "
"to know if the transaction has reached the network before sending Bob an "
"email."
msgstr "Alice正在开发一个应用程序来将10个nem:xem发送给Bob。在向Bob发送电子邮件之前，她想知道交易是否已到达网络。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:20
msgid ""
"When announcing a transaction in NIS1, you had to wait to get the "
"response from the node. Catapult works differently. When a transaction is"
" announced, the REST API server will always return an OK."
msgstr "在NIS1中宣布事务时，您必须等待从节点获得响应。投石机的工作方式很特别。 宣布事务时，REST API服务器总是返回OK。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:22
#, fuzzy
msgid ""
"As a result, the developer does not have to wait until the server returns"
" a response, being able to make more responsive apps.  However, it is the"
" developer's responsibility to check the status of the transaction and "
"ensure it is confirmed."
msgstr "因此，开发人员不必等到服务器返回响应，才能生成响应更快的应用程序。 但是，开发人员有责任检查交易状态并确保其已得到确认。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:24
msgid ""
"On the other hand, keeping track of transactions status adds unnecessary "
"complexity to small projects. It also increases the difficulty when "
"migrating from NIS1."
msgstr "另一方面，跟踪交易状态会给小型项目增加不必要的复杂性。 从NIS1迁移时，这也增加了难度。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:26
msgid ""
"nem2-camel aims to solve these problems by providing a server that "
"listens to the Catapult REST calls and acts as a proxy. When it detects a"
" transaction announcement, it waits for the confirmation via "
":ref:`WebSockets<websockets>` and returns the message to the HTTP call."
msgstr ""
"nem2-camel旨在通过提供一个侦听Catapult REST调用并充当代理的服务器来解决这些问题。 "
"当它检测到事务通知时，它通过以下命令等待确认:ef\"`WebSockets <websockets>`并将消息返回给HTTP调用。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:28
msgid ""
"The function ``TransactionHttp.announceSync`` allows announcing "
"transactions synchronously when using  nem2-camel as a proxy.  nem2-camel"
" will respond successfully when the transaction has reached the network "
"and had no validation errors.  You might still need to :doc:`wait for "
"several confirmations  <../../concepts/transaction>` before executing "
"additional actions."
msgstr ""
"函数``TransactionHttp.announceSync``允许在使用nem2-camel作为代理时同步通知事务。 "
"当事务到达网络并且没有验证错误时，nem2-camel将成功响应。 在执行其他操作之前，您可能仍需要:doc:`等待几个确认<../../ "
"concepts / transaction>`。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:33
msgid "nem2-camel"
msgstr "nem2-camel"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:37
msgid "Prerequisites"
msgstr "先决条件"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:39
msgid ""
"Finish :doc:`sending a transfer transaction guide <sending-a-transfer-"
"transaction>`"
msgstr "完成:doc:`发送转让交易指南 <sending-a-transfer-transaction>`"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:40
msgid "Have one :ref:`account with cat.currency <setup-getting-a-test-account>`"
msgstr ""

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:44
msgid "Let’s get into some code"
msgstr "让我们来点代码"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:46
msgid "**Running Catapult Service in local**"
msgstr "**本地运行Catapult Service**"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:48
msgid "nem2-camel acts like a proxy between the application and the REST API."
msgstr "nem2-camel就像应用程序和REST API之间的代理。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:50
msgid ""
"For development and learning purposes, you can run the :doc:`Catapult "
"Server and Catapult REST <../../concepts/node>` using the |catapult-"
"service-bootstrap|."
msgstr ""
"为了开发和学习，您可以使用 |catapult-service-bootstrap| 运行:doc:`Catapult "
"Server和Catapult REST <../../ concepts / node>`。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:52
msgid ""
"Make sure you have |docker| and |docker-compose| installed before running"
" the following instructions:"
msgstr "在运行以下步骤之前,确保你安装了 |docker| 和 |docker-compose| ："

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:60
msgid ""
"If everything goes well, after the image has been downloaded and the "
"service is running, check if you can get the first block information:"
msgstr "如果一切顺利，在下载映像并运行服务后，检查是否可以获取第一个块信息："

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:66
msgid "**Getting Alice and Bob addresses**"
msgstr "**获取Alice和Bob地址**"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:68
#, fuzzy
msgid ""
"Once the Catapult Service is running, it will generate a set of "
":doc:`accounts <../../concepts/account>` containing cat.currency."
msgstr "一旦Catapult服务运行，它将生成一组包含XEM的:doc:`accounts <../../ concepts / account>`。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:70
#, fuzzy
msgid ""
"Find the key pairs which contain cat.currency under the section "
"``nemesis_addresses``."
msgstr "在 ``nemesis_addresses``下找到包含XEM的密钥对。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:77
msgid "Take the first key pair as Alice's account, and copy the private key."
msgstr ""

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:79
msgid "Take the second key pair as Bob's account, and copy the address."
msgstr ""

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:81
msgid "**Installing nem2-camel**"
msgstr "**下载nem2-camel**"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:83
msgid "nem2-camel requires at least Java version 8."
msgstr "nem2-camel需要8及其以上的Java版本。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:85
msgid "Download the latest |nem2-camel-jar| package release, and run:"
msgstr "下载最新发布的 | nem2-camel-jar | 包，并运行："

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:91
msgid "After the service is up, use ``0.0.0.0:9000`` as the new proxy url."
msgstr "服务启动后，使用“0.0.0.0：9000`”作为新的代理URL。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:93
msgid "**Sending the transfer transaction**"
msgstr "**发送转让交易**"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:95
#, fuzzy
msgid ""
"Alice creates a :doc:`Transfer Transaction <../../concepts/transfer-"
"transaction>`, sending ``10 cat.currency`` to Bob and signs it with her "
"account."
msgstr ""
"Alice创建了一个:doc:`Transfer Transaction <../../ concepts / transfer-"
"transaction>`，向Bob发送了 ``10 XEM``并用她的账号进行签名。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:99
#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:108
msgid "|turning-the-asynchronous-transaction-announcement-into-synchronous-ts|"
msgstr "|turning-the-asynchronous-transaction-announcement-into-synchronous-ts|"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:104
msgid ""
"Once signed, Alice can :doc:`announce the transaction "
"<../../concepts/transaction>` to the network. Use "
"``TransactionHttp.announceSync`` instead of ``TransactionHttp.announce`` "
"to wait until it reaches the network and returns back the Transaction "
"object. After that, Alice can send an email to Bob."
msgstr ""
"签名后，Alice可以:doc:`向网络宣布交易<../../ concepts / transaction>`。 "
"使用``TransactionHttp.announceSync``代替``TransactionHttp.announce``等待它到达网络并返回Transaction对象。"
" 之后，Alice可以向Bob发送电子邮件。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:113
msgid ""
"If the transaction is valid, nem2-camel returns a ``Transaction`` object."
" It is important to highlight that this transaction has an "
"``unconfirmed`` status. Alice, or you, might still need to :doc:`wait  "
"for several confirmations <../../concepts/transaction>` before executing "
"additional actions."
msgstr ""
"如果事务有效，nem2-camel返回一个``Transaction``对象。 重要的是要强调此事务具有“unconfirmed的”状态。 "
"在你执行其他操作之前，Alice或者你可能仍然需要:doc:`等待几个确认<../../ concepts / transaction>`。"

#: ../../source/guides/transaction/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:115
msgid ""
"In case the Catapult REST server throws an error, the subscribe method "
"will invoke the ``error function`` returning a ``TransactionStatus`` "
"object."
msgstr ""
"如果Catapult REST服务器抛出错误，subscribe方法将调用``error "
"function``返回一个``TransactionStatus``对象。"

#~ msgid "A text editor or IDE"
#~ msgstr "文本编辑器或IDE"

#~ msgid "An account with XEM"
#~ msgstr "拥有XEN的账户"

